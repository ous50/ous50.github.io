<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ousfifty's blog</title><link>https://blog.ous50.moe/en/</link><description>Recent content on ousfifty's blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 05 Aug 2025 12:00:00 +0000</lastBuildDate><atom:link href="https://blog.ous50.moe/en/index.xml" rel="self" type="application/rss+xml"/><item><title>Installing FnOS on Proxmox VE (PVE)</title><link>https://blog.ous50.moe/en/p/installing-fnos-on-proxmox-ve-pve/</link><pubDate>Sun, 03 Aug 2025 10:12:00 +0000</pubDate><guid>https://blog.ous50.moe/en/p/installing-fnos-on-proxmox-ve-pve/</guid><description>&lt;h1 id="installing-fnos-on-proxmox-ve-pve">Installing FnOS on Proxmox VE (PVE)&lt;/h1>
&lt;p>&lt;strong>Last Updated&lt;/strong>: August 4, 2025
&lt;strong>Scope&lt;/strong>: This guide details the installation of FnOS on Proxmox VE (tested on PVE 12) and provides critical post-installation configurations to ensure functionality and performance.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This document addresses common challenges encountered after installing FnOS in a PVE environment, such as being locked out of the system and the PVE web console being unresponsive. By following these steps, you will achieve a fully accessible, secure, and optimized FnOS virtual machine.&lt;/p></description></item><item><title>Compiling Lineage OS on WSL2</title><link>https://blog.ous50.moe/en/p/compiling-lineage-os-on-wsl2/</link><pubDate>Thu, 25 Jan 2024 03:46:22 +0000</pubDate><guid>https://blog.ous50.moe/en/p/compiling-lineage-os-on-wsl2/</guid><description>&lt;h1 id="install-wsl-linux-and-compiling-dependency">Install WSL Linux and Compiling Dependency&lt;/h1>
&lt;p>By default Ubuntu is installed:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Make downloads faster by not displaying progress bar:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$ProgressPreference&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;SilentlyContinue&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Using the URL you found above, download the appx package:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Invoke-WebRequest&lt;/span> &lt;span class="n">-Uri&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="p">//&lt;/span>&lt;span class="n">aka&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">wslubuntu&lt;/span> &lt;span class="n">-OutFile&lt;/span> &lt;span class="n">Linux&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">appx&lt;/span> &lt;span class="n">-UseBasicParsing&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Make a backup and unpack:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Copy-Item&lt;/span> &lt;span class="p">.\&lt;/span>&lt;span class="n">Linux&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">appx&lt;/span> &lt;span class="p">.\&lt;/span>&lt;span class="n">Linux&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">zip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Expand-Archive&lt;/span> &lt;span class="p">.\&lt;/span>&lt;span class="n">Linux&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">zip&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Search for the installer:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Get-Childitem&lt;/span> &lt;span class="n">-Filter&lt;/span> &lt;span class="p">*.&lt;/span>&lt;span class="n">exe&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Install compiling dependency for Ubuntu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libelf-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="for-debian-bookworm">For Debian Bookworm:&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">sudo apt install bc bison build-essential ccache curl flex g++-multilib gcc-multilib git git-lfs gnupg gperf imagemagick lib32readline-dev lib32z1-dev libelf-dev liblz4-tool libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev libncurses5 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="install-build-packages">Install build packages:&lt;/h1>
&lt;h2 id="repo">Repo&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">curl https://storage.googleapis.com/git-repo-downloads/repo &lt;span class="p">|&lt;/span>sudo tee /usr/bin/repo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo chmod a+x /usr/bin/repo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="platform-tools">Platform tools&lt;/h2>
&lt;p>If you havenâ€™t previously installed &lt;code>adb&lt;/code> and &lt;code>fastboot&lt;/code>, you can &lt;a href="https://dl.google.com/android/repository/platform-tools-latest-linux.zip">download the original version from Google&lt;/a> and extract it:&lt;/p></description></item><item><title>Installing ArchLinux With Btrfs in Vmware</title><link>https://blog.ous50.moe/en/p/installing-archlinux-with-btrfs-in-vmware/</link><pubDate>Fri, 13 Jan 2023 23:07:11 +0800</pubDate><guid>https://blog.ous50.moe/en/p/installing-archlinux-with-btrfs-in-vmware/</guid><description>&lt;h2 id="before-installation">Before installation&lt;/h2>
&lt;p>Create a virtual machine and adjust depend config on your need(Except for the UEFI firmware part):&lt;/p>
&lt;p>&lt;img src="overview.png" alt="overview">&lt;/p>
&lt;p>&lt;img src="firmwareConfig.png" alt="firmwareConfig">&lt;/p>
&lt;p>To prevent the creation of vmem files for acceleration, &lt;a href="https://gist.github.com/extremecoders-re/cf8d829c108d58bfbb2e3c1f4121d7e1" title="Disabling vmem files creation.">add the following lines to your .vmx file&lt;/a>(:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">prefvmx.minVmMemPct = &amp;#34;100&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">MemTrimRate = &amp;#34;0&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mainMem.useNamedFile = &amp;#34;FALSE&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sched.mem.pshare.enable = &amp;#34;FALSE&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">prefvmx.useRecommendedLockedMemSize = &amp;#34;TRUE&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Boot up the vm, and check if the firmware is UEFI or not:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ls /sys/firmware/efi/efivars
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>if it&amp;rsquo;s legacy BIOS, it will returns &lt;code>No such file or directory.&lt;/code>&lt;/p></description></item><item><title>Fixing the brightness function keys in Legion laptops with discrete graphics option enabled</title><link>https://blog.ous50.moe/en/p/fixing-the-brightness-function-keys-in-legion-laptops-with-discrete-graphics-option-enabled/</link><pubDate>Tue, 08 Nov 2022 02:06:00 +0000</pubDate><guid>https://blog.ous50.moe/en/p/fixing-the-brightness-function-keys-in-legion-laptops-with-discrete-graphics-option-enabled/</guid><description>&lt;h1 id="intro">Intro&lt;/h1>
&lt;p>Lenovo Legion series Laptops uses IdeaPad ACPI and ones in normal configuration can use nearly all of the function keys except for F9(Favorite key), F11(tab switching key) and F12(Calculator key), since ACPI key functions is not defined:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">sudo acpi_listen
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 8FC0DE0C-B4E4- 000000d0 &lt;span class="m">00000000&lt;/span> &lt;span class="c1">#F9&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">^&lt;span class="o">[&lt;/span>^&lt;span class="o">[[&lt;/span>27&lt;span class="p">;&lt;/span>5&lt;span class="p">;&lt;/span>9~ &lt;span class="c1">#F11 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">8FC0DE0C-B4E4- 000000d0 &lt;span class="m">00000000&lt;/span> &lt;span class="c1">#F12&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But for users have &amp;ldquo;discrete graphics&amp;rdquo; option switched on in BIOS, F5(Brightness Up) and F6(Brightness Down) is not working, although running &lt;code>acpi_listen&lt;/code> shows everything is normal:&lt;/p></description></item><item><title>Some useful markdown noting codes</title><link>https://blog.ous50.moe/en/p/some-useful-markdown-noting-codes/</link><pubDate>Fri, 16 Sep 2022 16:00:00 +0000</pubDate><guid>https://blog.ous50.moe/en/p/some-useful-markdown-noting-codes/</guid><description>&lt;h1 id="some-useful-markdown-note-taking-codes">Some useful markdown note taking codes&lt;/h1>
&lt;h2 id="maths">Maths&lt;/h2>
&lt;h3 id="in-line-mathslatex-expressions">In-line maths(LaTeX?) expressions&lt;/h3>
&lt;p>Turn on the &amp;ldquo;In-line Math Equation&amp;rdquo; option in your editor. In my editor Typora, you can turn it on in &lt;code>File&amp;gt;&amp;gt;Preferences&amp;gt;&amp;gt;Markdown&amp;gt;&amp;gt;Syntax Support&amp;gt;&amp;gt;Inline Math&lt;/code>. Then just write as the following(Please don&amp;rsquo;t judge whether the equation is wrong or not, after all, this is just a demonstration.):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-latex" data-lang="latex">&lt;span class="line">&lt;span class="cl">&lt;span class="s">$&lt;/span>&lt;span class="nb">inline &lt;/span>&lt;span class="nv">\ &lt;/span>&lt;span class="nb">math &lt;/span>&lt;span class="nv">\ &lt;/span>&lt;span class="nb">example: &lt;/span>&lt;span class="nv">\ &lt;/span>&lt;span class="nb">f&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nb">x&lt;/span>&lt;span class="o">)=&lt;/span>&lt;span class="nb">x^&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nb">y_&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="s">$&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It will look like $inline \ math \ example: \ f(x)=x^2+y_2$&lt;/p></description></item><item><title>How to make a combined brother printer driver AUR package</title><link>https://blog.ous50.moe/en/p/how-to-make-a-combined-brother-printer-driver-aur-package/</link><pubDate>Tue, 25 Jan 2022 03:46:22 +0000</pubDate><guid>https://blog.ous50.moe/en/p/how-to-make-a-combined-brother-printer-driver-aur-package/</guid><description>&lt;h1 id="how-to-make-a-combined-brother-printer-driver-aur-package">How to make a combined brother printer driver AUR package&lt;/h1>
&lt;h2 id="todo">TODO&lt;/h2>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Analyze differences of file trees between the two types&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Analyze differences of the installation processes between the two types&lt;/li>
&lt;/ul>
&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>Traditionally, Brother printers&amp;rsquo; drivers are divided with cupswrapper and lpr. The Arch-Wiki &lt;a href="https://wiki.archlinux.org/title/Packaging_Brother_printer_drivers">gives the solution on how to package them&lt;/a>. But there&amp;rsquo;s some printers, e.g. DCP-B7500D and HL-L2350DW, have a combined driver with different file tree. This article is to record how I package.&lt;/p></description></item><item><title>Archives</title><link>https://blog.ous50.moe/en/archives/</link><pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate><guid>https://blog.ous50.moe/en/archives/</guid><description/></item><item><title>About</title><link>https://blog.ous50.moe/en/about/</link><pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate><guid>https://blog.ous50.moe/en/about/</guid><description>&lt;p>Written in Go, Hugo is an open source static site generator available under the &lt;a href="https://github.com/gohugoio/hugo/blob/master/LICENSE">Apache Licence 2.0.&lt;/a> Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.&lt;/p>
&lt;p>Hugo makes use of a variety of open source projects including:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/yuin/goldmark">https://github.com/yuin/goldmark&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/alecthomas/chroma">https://github.com/alecthomas/chroma&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/muesli/smartcrop">https://github.com/muesli/smartcrop&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/spf13/cobra">https://github.com/spf13/cobra&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/spf13/viper">https://github.com/spf13/viper&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.&lt;/p></description></item><item><title>Links</title><link>https://blog.ous50.moe/en/links/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.ous50.moe/en/links/</guid><description/></item><item><title>Search</title><link>https://blog.ous50.moe/en/search-here/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.ous50.moe/en/search-here/</guid><description/></item></channel></rss>