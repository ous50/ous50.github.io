<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>欧式fifty 的 blog</title>
        <link>https://blog.ous50.moe/zh-cn/</link>
        <description>Recent content on 欧式fifty 的 blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Thu, 17 Feb 2022 00:10:24 +0000</lastBuildDate><atom:link href="https://blog.ous50.moe/zh-cn/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>关于 Prebuilt VPN 与 cgproxy 打架的这件事</title>
        <link>https://blog.ous50.moe/zh-cn/post/prebuilt-vpn-fight-with-cgproxy/</link>
        <pubDate>Thu, 17 Feb 2022 00:10:24 +0000</pubDate>
        
        <guid>https://blog.ous50.moe/zh-cn/post/prebuilt-vpn-fight-with-cgproxy/</guid>
        <description>关于 Prebuilt VPN 与 cgproxy 打架的这件事 Update 2022-02-17: Initial post
2022-03-23: 看完log 找到了最终方法
2022-11-09: 早就换到漏油器了 舒服多了（
太长不看版 直接跳到最终解决方法模块
Intro 由于众所周知的原因，咱24/7挂着代理。
因为linux有太多应用不看http_proxy变量，咱一直开着 cgproxy 来代理全机流量，一直都没有问题
直到咱需要使用学校网络而尝试连接学校VPN。
咕咕了好久之后，咱终于下定决心处理它。
现象 正常上网的时候想连接学校的L2TP/IPsec VPN，打开 networkmanager 的 控制面板并点击连接VPN后它一直在转圈却没有成功
分析与解决 直接查看一手log
sudo journalctl -f 再重复一次操作即可看到实时的log。在这里咱看到了这么一段：
Feb 16 23:51:49 testOnArch kded5[939]: org.kde.plasma.nm.kded: Unhandled VPN connection state change: 2 Feb 16 23:51:49 testOnArch akonadi_sendlater_agent[1283]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch kmail[1269]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch akonadi_mailmerge_agent[1278]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch akonadi_followupreminder_agent[1260]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch akonadi_imap_resource[1262]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch qv2ray[1456]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch akonadi_maildispatcher_agent[1276]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch kgpg[1244]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch akonadi_davgroupware_resource[1257]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch akonadi_notes_agent[1282]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch DiscoverNotifier[1053]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch akonadi_sendlater_agent[1283]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch akonadi_followupreminder_agent[1260]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch akonadi_maildispatcher_agent[1276]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch akonadi_davgroupware_resource[1257]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch akonadi_imap_resource[1262]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch akonadi_notes_agent[1282]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch akonadi_mailmerge_agent[1278]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch DiscoverNotifier[1053]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch qv2ray[1456]: &amp;#34;Object does not exist at path “/org/freedesktop/NetworkManager/ActiveConnection/2”&amp;#34; Feb 16 23:51:49 testOnArch kded5[939]: org.</description>
        </item>
        <item>
        <title>如何为Brother新的打印机驱动打包AUR</title>
        <link>https://blog.ous50.moe/zh-cn/post/how-to-make-a-combined-brother-printer-driver-aur-package/</link>
        <pubDate>Tue, 25 Jan 2022 03:46:22 +0000</pubDate>
        
        <guid>https://blog.ous50.moe/zh-cn/post/how-to-make-a-combined-brother-printer-driver-aur-package/</guid>
        <description>如何为Brother新的打印机驱动打包AUR TODO 优化代码（咕 分析这两种驱动的文件数区别 分析这两种驱动安装过程的区别 引言 ​ 一般来说，Brother的打印机驱动分成了 cupswraper 和 lpr 两个独立的驱动。Arch-Wiki已经给出了怎么打包这样的驱动的教程，但是有一些新机器的驱动，比如 DCP-B7500D 和 HL-L2350DW ， 是混合在一起的新版驱动包。在这里咱记录下如何打包。
准备 Arch-Linux PC ( 淦你打包来当然要用啊) 官方的 .deb 或 .rpm 驱动下载链接 建议读一下基本的打包指引(简体中文) https://wiki.archlinux.org/title/Arch_package_guidelines_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87) 写 PKGBUILD 一般来说这些驱动的版本都是 4.0.0
咱根据 Roman Schmocker的 brother-hll2350dw package 做了自己的 PKGBUILD，请针对自己的实际情况进行修改 :
# Maintainer: ous50 pkgname=brother-dcpb7500d printerModel=DCPB7500D pkgver=4.0.0 pkgrel=1 pkgdesc=&amp;#34;Printing driver for Brother DCP-B7500 printer&amp;#34; arch=(&amp;#34;i686&amp;#34; &amp;#34;x86_64&amp;#34; &amp;#34;armv7l&amp;#34;) //请去包中 data.tar.gz 的 &amp;#39;/opt/brother/Printers/$printerModel/lpd&amp;#39; 目录下查看有什么架构 url=&amp;#34;https://support.brother.com/g/b/producttop.aspx?c=in&amp;amp;lang=en&amp;amp;prod=dcpb7500d_as_cn&amp;#34; //该打印机的支持页面 license=(&amp;#34;EULA&amp;#34;) groups=(&amp;#34;base-devel&amp;#34;) depends=(&amp;#39;cups&amp;#39; &amp;#39;ghostscript&amp;#39;) depends_x86_64=(&amp;#39;lib32-glibc&amp;#39;) install=&amp;#34;$pkgname.install&amp;#34; source=( &amp;#34;https://download.</description>
        </item>
        <item>
        <title>利用docker搭建vaultwarden</title>
        <link>https://blog.ous50.moe/zh-cn/post/vaultwarden-build-with-docker/</link>
        <pubDate>Fri, 12 Mar 2021 17:04:18 +0000</pubDate>
        
        <guid>https://blog.ous50.moe/zh-cn/post/vaultwarden-build-with-docker/</guid>
        <description>Bitwarden是一个免费、自由且开源的的密码管理器，服务端也完全开源，可以自己搭建。 本文将咱自建bitwarden的过程记录下来。
更新 Updates 2021-09-30 ：了解更多nginx之后重新写了一遍config，而 Bitwarden_RS 已经改名成 Vaultwarden 了
2021-11-03 ：增加了使用CDN访问时获取访客真实ip的方法
2021-11-15 ：1. 修改了文章顺序提高阅读性 2.增加了docker-compose的启动方法
2022-08-15 ： 因应 vaultwarden wiki 的更新，修改了nginx 配置
前言 那个男孩不想拥有自己的密码管理器呢，之前欧式都是 Google 密码和 iCloud keychain 一起用的，混合使用不仅难于跨平台同步（非chrome/apple设备的密码更是无法填充），而且数据也无法自己掌控。上了大学之后，我了解到了全平台开源密码管理器bitwarden。经过了将近半年的折腾，终于做得好用点了，现在记录一下。
准备的东西 一个服务器，至少200MB RAM
一个域名，这里就用了自己在使用的 (以 bitwarden.example.com 为例)
还有亿点点耐心和学习搭建密码管理器的兴趣
下载docker镜像 这里我使用的是vaultwarden（前称Bitwarden_RS），虽然它是第三方用Rust重写的，但是需要的资源更少，而且默认开启高级会员的功能 谁不想白嫖呢。
docker pull vaultwarden/server 打开你的域名dns管理界面，添加bitwarden的dns记录。
配置vaultwarden 初始化运行 Docker-compose （没试过，有时间试试） ! 需要先行安装 Docker-compose 包
根据 Vaultwarden-Wiki中关于Docker-Compose的描述，你要找个自己舒服的地方，新建 docker-compose.yml:
touch docker-compose.yml 或者直接进行一个nano的使用 这是什么保姆级教学：
nano docker-compose.yml 然后根据自己的情况把下面的贴进去：
version: &amp;#39;3&amp;#39; services: vaultwarden: image: vaultwarden/server:latest container_name: vaultwarden restart: always #指定重启策略 environment: - WEBSOCKET_ENABLED=true # 启用 WebSocket 通知.</description>
        </item>
        <item>
        <title>归档</title>
        <link>https://blog.ous50.moe/zh-cn/page/archives/</link>
        <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
        
        <guid>https://blog.ous50.moe/zh-cn/page/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>关于</title>
        <link>https://blog.ous50.moe/zh-cn/page/about/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.ous50.moe/zh-cn/page/about/</guid>
        <description>This is a test page for i18n support.</description>
        </item>
        <item>
        <title>搜寻</title>
        <link>https://blog.ous50.moe/zh-cn/page/%E6%90%9C%E7%B4%A2/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.ous50.moe/zh-cn/page/%E6%90%9C%E7%B4%A2/</guid>
        <description></description>
        </item>
        <item>
        <title>友链</title>
        <link>https://blog.ous50.moe/zh-cn/page/links/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://blog.ous50.moe/zh-cn/page/links/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
